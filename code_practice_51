class pan:
    def __init__(self,tid,mat,brand,price,capacity):
        self.tid = tid
        self.mat = mat
        self.brand = brand
        self.price = price
        self.capacity = capacity
        

class solution:
    @staticmethod
    def costliest(sol_ls,mat1):
        ans = 0
        m = ""
        for i in sol_ls:
            if i.mat == mat1:
                if i.price > ans:
                    ans = i.price
                    m = i.tid
                    
        return m
        
        
    @staticmethod
    def discount(sol_ls,brand1):
        for i in sol_ls:
            if i.brand == brand1:
                if 1000 > i.capacity > 500:
                    neww = i.price * 0.20
                    up = i.price - neww
                    i.price = up
                    print(i.price)
                
                elif i.capacity > 1000:
                    neww = i.price * 0.26
                    up = i.price - neww
                    i.price = up
                    print(i.price)
                
                
                

n = int(input())
sol_ls = []
for i in range(n):
    tid = input()
    mat = input()
    brand = input()
    price = int(input())
    capacity = int(input())
    obj1 = pan(tid,mat,brand,price,capacity)
    sol_ls.append(obj1)

mat1 = input()
brand1 = input()
    
print(solution.costliest(sol_ls,mat1))
solution.discount(sol_ls,brand1)


INPUT:--
7
id23
brass
a
200
120
id24
cupper
b
300
1130
id25
chromium
c
400
640
id26
steel
d
500
950
id27
steel
e
800
950
id28
iron
f
500
950
id29
aluminum
g
500
950
steel
d
OUTPUT:--
id27
400.0






